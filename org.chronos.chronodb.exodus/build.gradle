plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


jar {
    manifest {
        attributes 'Implementation-Title': 'ChronoDB Exodus Backend'
    }
}


task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier "sources"
}

afterEvaluate { project ->

    // Defines the to-be published artifacts with the maven-publish task
    // Is not responsible for any publishing. Just defines the artifacts.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourceJar
                //the maven descriptor info
                groupId project.group
                artifactId jar.baseName
                version project.mavenVersion
            }
        }
    }
}

test{
    useJUnitPlatform {
        excludeTags "slow", "performance"
    }
}

dependencies {
    // chronos project dependencies
    api project(':org.chronos.common')
    api project(':org.chronos.chronodb.api')

    // exodus
    implementation("org.jetbrains.xodus:xodus-openAPI:${project.exodusVersion}")
    implementation("org.jetbrains.xodus:xodus-environment:${project.exodusVersion}")

    // Utilities
    implementation("com.esotericsoftware:kryo:${project.kryoVersion}")
    implementation("com.thoughtworks.xstream:xstream:${project.xstreamVersion}")

    implementation("io.github.microutils:kotlin-logging-jvm:${project.kotlinLoggingVersion}")

    testImplementation project(':org.chronos.common.testing')
}