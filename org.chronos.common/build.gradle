// ORG.CHRONOS.COMMON/build.gradle

jar {
    manifest {
        attributes 'Implementation-Title': 'Chronos Common'
    }
}

dependencies {
    // Utilities
    compile("com.esotericsoftware:kryo:${project.kryoVersion}")
    testCompile project(':org.chronos.common.testing')
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier "sources"
}

test {
    filter {
        includeTestsMatching "org.chronos.common.test.cases.*"
    }
    useJUnit {
        // exclude performance tests and benchmarks
        excludeCategories 'org.chronos.common.test.junit.categories.PerformanceTest'
        // exclude all suites (they are redundant when working with gradle)
        excludeCategories 'org.junit.runners.Suite'
    }
}

// Defines the to-be published artifacts with the maven-publish task
// Is not responsible for any publishing. Just defines the artifacts.
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            //the maven descriptor info
            groupId project.group
            artifactId jar.baseName
            version project.mavenVersion
        }
    }
}

task generateBuildInfoFile {
    doLast {
        File configFile = file('src/main/resources/buildInfo.properties')
        System.out.println("Creating build info file (${project.version}) in: " + configFile.getAbsolutePath())
        if (configFile.exists()) {
            Properties oldProps = new Properties()
            oldProps.load(new FileInputStream(configFile))
            String oldProjectVersion = oldProps.getProperty("org.chronos.buildVersion")
            if (oldProjectVersion == project.version) {
                return
            } else {
                configFile.delete()
            }
        }
        configFile.createNewFile()
        Properties properties = new Properties()
        properties.setProperty("org.chronos.buildVersion", project.version)
        FileOutputStream fos = new FileOutputStream(configFile)
        try {
            fos.write("# GENERATED BY CHRONOS BUILD SCRIPT\n\n".getBytes())
            properties.store(fos, null)
        } finally {
            fos.close()
        }
    }
}

// generate the buildInfo.properties file before compiling the classes
compileJava {
    dependsOn generateBuildInfoFile
}

compileTestJava {
    dependsOn generateBuildInfoFile
}

